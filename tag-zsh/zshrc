set -o vi

export GREP_COLOR='1;33'

if [ -n "$DISPLAY" -a "$TERM" = "xterm" ]; then
  export TERM=xterm-256color
fi

export EDITOR=nvim

if [[ -n $SSH_CONNECTION ]]; then
  # nothing to do here for now
else
  export VISUAL=nvim
fi

# load additional completions
fpath=(/usr/local/share/zsh-completions $fpath)

# use vi key bindings
bindkey -v

# search backward incrementally for a specified string
bindkey '^r' history-incremental-search-backward

# emacs style movements
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line
bindkey '^[[1;5C' emacs-forward-word
bindkey '^[[1;5D' emacs-backward-word

# oh my zsh

export ZSH=$HOME/.oh-my-zsh

DISABLE_UPDATE_PROMPT=true

plugins=(
  ant fasd battery brew cap cabal docker cp gem
  git github heroku history history-substring-search jruby knife lein
  node npm osx perl python rails rake rsync ruby rvm scala tmux
  tmuxinator torrent vagrant redis-cli web-search
)

source $ZSH/oh-my-zsh.sh

export DOTFILES=$HOME/.dotfiles

# load custom functions & aliases
# (should be after oh-my-zsh & plugins to use my overrides)
source $DOTFILES/index

source $HOME/.zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)

source $HOME/.zsh-history-substring-search/zsh-history-substring-search.zsh
source $HOME/.zsh-autosuggestions/autosuggestions.zsh

export AUTOSUGGESTION_HIGHLIGHT_COLOR='fg=11'

# enable autosuggestions automatically
# zle-line-init() {
#   zle autosuggest-start
# }
# zle -N zle-line-init

# use ctrl+t to toggle autosuggestions(hopefully this wont be needed as
# zsh-autosuggestions is designed to be unobtrusive)
bindkey '^T' autosuggest-toggle
bindkey '^f' vi-forward-word

# bind P and N for EMACS mode
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down

# disable annoying autocorrect feature
unsetopt correct_all

# auto predict
autoload predict-on
autoload predict-off

# on/off zsh autopredict
zle -N predict-on
zle -N predict-off
bindkey '^X1' predict-on
bindkey '^X2' predict-off

. `brew --prefix`/etc/profile.d/z.sh

# export ZPLUG_HOME=/usr/local/opt/zplug
# source $ZPLUG_HOME/init.zsh

# powerline prompt (slow)
# source /usr/local/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh

# pure prompt
autoload -U promptinit && promptinit
prompt pure

# use overcommit for all repositories you create/clone (carefull cuz of brew)
# export GIT_TEMPLATE_DIR=`overcommit --template-dir`

# speed up jvm for leiningen dev env
# export LEIN_JAVA_CMD=$(which drip)
export LEIN_JVM_OPTS=-XX:TieredStopAtLevel=1
# export JAVA_HOME=$(/usr/libexec/java_home)

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# added by travis gem
[ -f /Users/vyorkin/.travis/travis.sh ] && source /Users/vyorkin/.travis/travis.sh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export PATH="$HOME/.jenv/bin:$HOME/apache-maven-3.3.9/bin:$PATH"
export PATH="$PATH:`yarn global bin`"

# setup rbenv & jenv
if which rbenv > /dev/null; then eval "$(rbenv init - --no-rehash)"; fi
if which jenv > /dev/null; then eval "$(jenv init -)"; fi

# tabtab source for yarn package
# uninstall by removing these lines or running `tabtab uninstall yarn`
[[ -f /Users/vyorkin/.yarn-cache/.global/node_modules/yarn-completions/node_modules/tabtab/.completions/yarn.zsh ]] && . /Users/vyorkin/.yarn-cache/.global/node_modules/yarn-completions/node_modules/tabtab/.completions/yarn.zsh

# OPAM configuration
source $HOME/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true
